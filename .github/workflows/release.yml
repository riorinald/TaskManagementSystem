name: Create Release on Main branch PR Merge

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Find TaskManagementSystem.API.csproj
      id: find_project
      run: |
        $projectPath = Get-ChildItem -Recurse -Filter TaskManagementSystem.API.csproj | Select-Object -First 1
        echo "project_path=$($projectPath.FullName)" >> $env:GITHUB_ENV

    - name: Restore dependencies
      run: dotnet restore "$env:project_path"

    - name: Publish project
      run: dotnet publish "$env:project_path" --configuration Release --output ./publish

    - name: Zip published output
      run: Compress-Archive -Path publish\* -DestinationPath release.zip

    - name: Install GitHub CLI
      run: choco install gh -y
      
    - name: Determine next tag
      id: tag
      run: |
        $latestTag = git describe --tags --abbrev=0
        if (-not $latestTag) { $latestTag = "v0.0.0" }
        $parts = $latestTag.TrimStart("v").Split(".")
        $newTag = "v{0}.{1}.{2}" -f $parts[0], $parts[1], [int]$parts[2] + 1
        echo "new_tag=$newTag" >> $env:GITHUB_ENV

    - name: Create GitHub Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create $env:new_tag --title "$env:new_tag" --notes "Auto release after PR merge to master"

    - name: Upload zipped artifact
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload $env:new_tag release.zip --clobber
